{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","root","document","getElementById","ReactDOM","render"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAwB9C,OACI,0BAAMC,SAjBW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAK1BR,GAAc,SAACS,GAAD,OAAYP,GAAZ,mBAA2BO,OAEzCN,EAAc,OASd,2BACIO,KAAK,OACLC,YAAY,sBACZC,MAAOV,EACPW,SA3Bc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,Y,uBCLdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAIKI,MAAMF,GAJX,cAIbG,EAJa,gBAKIA,EAAUC,OALd,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCDXO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBT,EAAiB,EAAjBA,IAAKU,EAAY,EAAZA,MAKnC,OACI,yBAAKI,UAAU,2CACX,yBAAKC,IAAKf,EAAKgB,IAAI,eACnB,2BAAIN,GAAgB,gBCNnBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAsBtC,OAdAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAK,SAACC,GACpBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKlB,CAACpB,IAIGqB,EDnBwBK,CAAa1B,GAAhCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GACnD,yBAAKgB,UAAU,aACVI,GAAW,uBAAGJ,UAAU,oCAAb,eAERH,EAAOJ,KAAI,SAACC,GAAD,OAEH,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEYrBkB,EA1Ba,WAAM,MAIM3C,mBAAS,CAAC,kBAJhB,mBAIvB4C,EAJuB,KAIX7C,EAJW,KAO9B,OACI,oCACA,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEK6C,EAAWpB,KAAK,SAACT,GAAD,OACZ,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,UCd7C8B,G,MAAOC,SAASC,eAAe,SAErCC,IAASC,OAAO,kBAAC,EAAD,MAAkBJ,I","file":"static/js/main.0dd1c8fe.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const hanldeSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            // al mandarle la funcion que recibe un parametro: este parametro\r\n            // es el valor controlado por el hook de la funcion setCategories\r\n            // Asi que podemos sin tener la refencia directa del valor \"Categories\"\r\n            // podemos modificarlo dentro de dicha funcion\r\n            setCategories((cats) => [ inputValue, ...cats]);\r\n\r\n            setInputValue('');\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit={hanldeSubmit}>\r\n\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Ingresa un Anime...\"\r\n                value={inputValue}\r\n                onChange={handleInputChange} />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\n    export const getGifs = async ( category ) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=O73qq3nqENFA2FYm7tIU3utHtTekye3k&limit=10`;\r\n        \r\n        const respuesta = await fetch(url);\r\n        const { data } = await respuesta.json();\r\n\r\n        const gifs = data.map((img) => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n        return gifs;\r\n    };","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, url, title }) => {\r\n\r\n    // console.log(id, url, title);\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__flipInX\">\r\n            <img src={url} alt=\"No cargoxd\" />\r\n            <p>{title ? title : 'Sin Titulo'}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            <div className=\"card-grid\">\r\n                {loading && <p className=\"animate__animated animate__pulse\">Cargando...</p> }\r\n                {\r\n                    images.map((img) =>\r\n                        (\r\n                            <GifGridItem\r\n                                key={img.id}\r\n                                {...img} // Asi se mandan todas las propiedades  del objeto img como parametro\r\n                            />\r\n                        )\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    //OJO la funcion parametro del useEffect NO puede ser async\r\n    useEffect(() => {\r\n\r\n        getGifs(category).then((imgs) => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        });\r\n\r\n\r\n    }, [category]);\r\n\r\n\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Naruto', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n    \r\n\r\n    return(\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n\r\n        <ol>\r\n            {\r\n             categories.map( (category) => \r\n                 <GifGrid key={category} category={category}/>\r\n            )\r\n            }\r\n        </ol>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(<GifExpertApp />, root);\n\n"],"sourceRoot":""}